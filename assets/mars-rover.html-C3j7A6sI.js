import{_ as e,c as i,o as t,a}from"./app-CefRtAWZ.js";const r={},o=a('<h1 id="mars-rover" tabindex="-1"><a class="header-anchor" href="#mars-rover"><span>Mars Rover</span></a></h1><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>Description</span></a></h2><p>You work at Twitter as part of the team that explores Mars by sending remotely controlled vehicles to the surface of the planet.</p><h3 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements"><span>Requirements</span></a></h3><ul><li><p>Your Mars Rover gets initialized with a starting Point (x,y) and a direction (N, S, E, W).</p></li><li><p>You have an unlimited grid... which means you can ignore the grid completely.</p></li><li><p>Your Mars Rover accepts a String of commands:</p><ul><li><code>L</code> for turning left.</li><li><code>R</code> for turning right.</li><li><code>M</code> for moving forward.</li></ul></li><li><p>Multiple Obstacles exist on the grid</p><ul><li>Obstacles have Points like the Mars Rover.</li><li>An Obstacle occupies the space of its position.</li><li>Command <code>L</code> and <code>R</code> are not effected by obstacles.</li><li>If the current executed command is <code>M</code>, but an obstacle block s the way, nothing happens (command gets ignored) until a following command (like <code>L</code> or <code>R</code>) occurs.</li></ul></li><li><p>Example 1:</p><ul><li>Mars Rover starts at Point (0,0) with Direction North (N), no obstacles.</li><li>Input is <code>MMLMRMRMMR</code>.</li><li>After executing command Mars Rover will be at Point (1,3) heading South (S).</li></ul></li><li><p>Example 2:</p><ul><li>Mars Rover starts at Point (1,0) with Direction North (N).</li><li>Two obstacles on (1,2) and (2,3).</li><li>Input is <code>MMMMRM</code>.</li><li>After executing command Mars Rover will be at Point (2, 1) heading East (E).</li></ul></li></ul><h3 id="constraints" tabindex="-1"><a class="header-anchor" href="#constraints"><span>Constraints</span></a></h3><ul><li>besides TDD no constraints, just try to find a solution by yourself</li></ul><h2 id="acceptance-criteria" tabindex="-1"><a class="header-anchor" href="#acceptance-criteria"><span>Acceptance Criteria</span></a></h2><ul><li><strong>#AC1:</strong> Code is covered with tests</li><li><strong>#AC2:</strong> Kata is committed &amp; pushed to your own kata repository.</li></ul>',9),s=[o];function l(n,c){return t(),i("div",null,s)}const h=e(r,[["render",l],["__file","mars-rover.html.vue"]]),p=JSON.parse('{"path":"/legacy/modules/katas/mars-rover.html","title":"Mars Rover","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Description","slug":"description","link":"#description","children":[{"level":3,"title":"Requirements","slug":"requirements","link":"#requirements","children":[]},{"level":3,"title":"Constraints","slug":"constraints","link":"#constraints","children":[]}]},{"level":2,"title":"Acceptance Criteria","slug":"acceptance-criteria","link":"#acceptance-criteria","children":[]}],"git":{"updatedTime":1728059686000,"contributors":[{"name":"miracoly","email":"68049792+miracoly@users.noreply.github.com","commits":1}]},"filePathRelative":"legacy/modules/katas/mars-rover.md"}');export{h as comp,p as data};
