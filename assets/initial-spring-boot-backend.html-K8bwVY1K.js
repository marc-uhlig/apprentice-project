import{_ as e,c as t,o as r,a}from"./app-BDlWiHj9.js";const i={},o=a('<h1 id="add-json-mock-server-for-frontend" tabindex="-1"><a class="header-anchor" href="#add-json-mock-server-for-frontend"><span>Add JSON Mock-Server for Frontend</span></a></h1><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>Description</span></a></h2><p>We are getting to the Point where we can connect our Frontend with a potential Backend. To to so, instead of using hard-coded data, our tasks must be fetched from a server. To enable parallel development of Frontend &amp; Backend and also to separate their dependence, a mock-server is used.</p><p>This server acts as a dumb Backend and responds with predefined payloads.</p><h2 id="instructions" tabindex="-1"><a class="header-anchor" href="#instructions"><span>Instructions</span></a></h2><ul><li>Install<a href="https://github.com/typicode/json-server" target="_blank" rel="noopener noreferrer"> json-server</a> package as a<a href="https://github.com/typicode/json-server#simple-example" target="_blank" rel="noopener noreferrer"> dev-dependency</a>.</li><li>Create a new directory for your mock-data and add a file called <code>db.json</code>.</li><li>Define<a href="https://github.com/typicode/json-server#routes" target="_blank" rel="noopener noreferrer"> routes</a> with meaningful names. You need: <ul><li><code>GET</code> to request all tasks</li><li><code>PUT</code> to update existing task</li><li><code>POST</code> to create new task</li><li><code>DELETE</code> to delete existing task</li></ul></li><li>Define dummy response data</li><li>Start your mock-server and test all endpoints manually witch <code>curl</code> or similar tools</li><li>The <code>db.json</code> shall be committed to git. You may observed that calling <code>PUT</code>, <code>POST</code> or <code>DELETE</code> mutates the the file. <ul><li>Find a (simple) way to use all http requests while preventing the <code>db.json</code> from changing.</li></ul></li><li>Create an npm script to make it as easy as possible for colleague developers to work the mock-server.</li><li>Adjust your Vue-App to fetch data <ul><li>You may realize that you tasks need an <code>id</code> to be uniquely identifiable. Add an id to your data structure if not already happend.</li></ul></li><li>Adapt you Cypress test to work again. You will have to<a href="https://docs.cypress.io/api/commands/intercept" target="_blank" rel="noopener noreferrer"> intercept</a> requests.</li></ul><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites"><span>Prerequisites</span></a></h2><ul><li><a href="https://klosebrothers.atlassian.net/wiki/spaces/KB/pages/2328199293" target="_blank" rel="noopener noreferrer">Ensure Green Tests and Code Quality of Frontend with CI</a></li></ul><h2 id="acceptance-criteria" tabindex="-1"><a class="header-anchor" href="#acceptance-criteria"><span>Acceptance Criteria</span></a></h2><ul><li><p>#AC1: Frontend fetches data instead of hard-coding it</p></li><li><p>#AC2: Mock-Server intercepts all Requests from Frontend</p></li><li><p>#AC3: App is still usable &amp; Pipeline stays green (obviously)</p></li><li><p>#AC4: Npm run script exists to easily start the mock-server</p></li></ul><h2 id="resources" tabindex="-1"><a class="header-anchor" href="#resources"><span>Resources</span></a></h2><ul><li><a href="https://github.com/typicode/json-server" target="_blank" rel="noopener noreferrer">GitHub - typicode/json-server: Get a full fake REST API with zero coding in less than 30 seconds (seriously)</a></li><li><a href="https://docs.cypress.io/api/commands/intercept" target="_blank" rel="noopener noreferrer">intercept | Cypress Documentation</a></li></ul>',12),s=[o];function n(l,c){return r(),t("div",null,s)}const p=e(i,[["render",n],["__file","initial-spring-boot-backend.html.vue"]]),u=JSON.parse('{"path":"/legacy/modules/todo-app/initial-spring-boot-backend.html","title":"Add JSON Mock-Server for Frontend","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Description","slug":"description","link":"#description","children":[]},{"level":2,"title":"Instructions","slug":"instructions","link":"#instructions","children":[]},{"level":2,"title":"Prerequisites","slug":"prerequisites","link":"#prerequisites","children":[]},{"level":2,"title":"Acceptance Criteria","slug":"acceptance-criteria","link":"#acceptance-criteria","children":[]},{"level":2,"title":"Resources","slug":"resources","link":"#resources","children":[]}],"git":{"updatedTime":1728059686000,"contributors":[{"name":"miracoly","email":"68049792+miracoly@users.noreply.github.com","commits":1}]},"filePathRelative":"legacy/modules/todo-app/initial-spring-boot-backend.md"}');export{p as comp,u as data};
